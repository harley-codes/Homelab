# service-proxy

services:
  service-proxy-authelia:
    image: authelia/authelia
    container_name: service-proxy-authelia
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - hotbox
    healthcheck:
      disable: true
    environment:
      TZ: ${VAR_GLOBAL_TIMEZONE}
      X_AUTHELIA_CONFIG_FILTERS: template
    volumes:
      - ./configuration/authelia:/config:ro
      - service-proxy-authelia-output:/var/authelia:rw
    labels:
      traefik.enable: "true"
      traefik.http.routers.service-proxy-authelia.rule: "Host(`${VAR_GLOBAL_AUTHELIA_SUBDOMAIN}.${VAR_GLOBAL_ROOT_DOMAIN}`)"
      traefik.http.routers.service-proxy-authelia.entrypoints: "websecure"
      traefik.http.routers.service-proxy-authelia.tls: "true"
      traefik.http.routers.service-proxy-authelia.tls.certresolver: "cloudflare"
      traefik.http.middlewares.service-proxy-authelia.forwardauth.address: "http://service-proxy-authelia:9091/api/verify?rd=https://${VAR_GLOBAL_AUTHELIA_SUBDOMAIN}.${VAR_GLOBAL_ROOT_DOMAIN}"
      traefik.http.middlewares.service-proxy-authelia.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.service-proxy-authelia.forwardauth.authResponseHeaders: "Remote-User,Remote-Groups,Remote-Name,Remote-Email"

  service-proxy-traefik:
    image: traefik:v3.4
    container_name: service-proxy-traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - hotbox
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
      - "8080:8080"
      - "2022:2022"
    environment:
      - CF_API_EMAIL=${VAR_LOCAL_CLOUDFLARE_API_EMAIL}
      - CF_DNS_API_TOKEN=${VAR_LOCAL_CLOUDFLARE_API_DNS_TOKEN}
    volumes:
      - ./configuration/traefik:/etc/traefik:ro
      - service-proxy-traefik-output:/var/traefik:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: "true"
      traefik.http.routers.service-proxy-traefik-api.rule: "Host(`${VAR_GLOBAL_TRAEFIK_SUBDOMAIN}.${VAR_GLOBAL_ROOT_DOMAIN}`)"
      traefik.http.routers.service-proxy-traefik-api.entrypoints: "websecure"
      traefik.http.routers.service-proxy-traefik-api.service: "api@internal"
      traefik.http.routers.service-proxy-traefik-api.tls: "true"
      traefik.http.routers.service-proxy-traefik-api.tls.certresolver: "cloudflare"
      traefik.http.routers.service-proxy-traefik-api.middlewares: "service-proxy-authelia@docker"

  service-proxy-whoami-unsecure:
    image: traefik/whoami
    container_name: service-proxy-whoami-unsecure
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - hotbox
    labels:
      traefik.enable: "true"
      traefik.http.routers.service-proxy-whoami-unsecure.rule: "Host(`${VAR_GLOBAL_WHOAMI_UNSECURE_SUBDOMAIN}.${VAR_GLOBAL_ROOT_DOMAIN}`)"
      traefik.http.routers.service-proxy-whoami-unsecure.entrypoints: "websecure"
      traefik.http.routers.service-proxy-whoami-unsecure.tls: "true"
      traefik.http.routers.service-proxy-whoami-unsecure.tls.certresolver: "cloudflare"
      traefik.http.routers.service-proxy-whoami-unsecure.middlewares: "service-proxy-authelia@docker"

  service-proxy-whoami-secure:
    image: traefik/whoami
    container_name: service-proxy-whoami-secure
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - hotbox
    labels:
      traefik.enable: "true"
      traefik.http.routers.service-proxy-whoami-secure.rule: "Host(`${VAR_GLOBAL_WHOAMI_SECURE_SUBDOMAIN}.${VAR_GLOBAL_ROOT_DOMAIN}`)"
      traefik.http.routers.service-proxy-whoami-secure.entrypoints: "websecure"
      traefik.http.routers.service-proxy-whoami-secure.tls: "true"
      traefik.http.routers.service-proxy-whoami-secure.tls.certresolver: "cloudflare"
      traefik.http.routers.service-proxy-whoami-secure.middlewares: "service-proxy-authelia@docker"

networks:
  hotbox:
    external: true

volumes:
  service-proxy-authelia-output:
  service-proxy-traefik-output:
